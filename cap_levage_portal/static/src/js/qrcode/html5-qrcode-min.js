class Html5Qrcode{static DEFAULT_WIDTH=300;static DEFAULT_WIDTH_OFFSET=2;static FILE_SCAN_MIN_HEIGHT=300;static SCAN_DEFAULT_FPS=2;static MIN_QR_BOX_SIZE=50;static SHADED_LEFT=1;static SHADED_RIGHT=2;static SHADED_TOP=3;static SHADED_BOTTOM=4;static SHADED_REGION_CLASSNAME="qr-shaded-region";static VERBOSE=!1;static BORDER_SHADER_DEFAULT_COLOR="#ffffff";static BORDER_SHADER_MATCH_COLOR="rgb(90, 193, 56)";constructor(e,t){if(!getLazarSoftScanner)throw"Use html5qrcode.min.js without edit, getLazarSoftScannernot found.";if(this.qrcode=getLazarSoftScanner(),!this.qrcode)throw"qrcode is not defined, use the minified/html5-qrcode.min.js for proper support";this._elementId=e,this._foreverScanTimeout=null,this._localMediaStream=null,this._shouldScan=!0,this._url=window.URL||window.webkitURL||window.mozURL||window.msURL,this._userMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia,this._isScanning=!1,Html5Qrcode.VERBOSE=!0===t}start(e,t,i,o){if(!e)throw"cameraIdOrConfig is required";if(!i||"function"!=typeof i)throw"qrCodeSuccessCallback is required and should be a function.";o||(o=console.log),this._clearElement();const r=this,n=t||{};n.fps=n.fps?n.fps:Html5Qrcode.SCAN_DEFAULT_FPS;let s=!1;n.videoConstraints&&(this._isMediaStreamConstraintsValid(n.videoConstraints)?s=!0:Html5Qrcode._logError("'videoConstraints' is not valid 'MediaStreamConstraints, it will be ignored.'",!0));const a=s,d=void 0!==n.qrbox,c=document.getElementById(this._elementId),l=c.clientWidth?c.clientWidth:Html5Qrcode.DEFAULT_WIDTH;if(c.style.position="relative",this._shouldScan=!0,this._element=c,this.qrcode.doNegatif=!!n.doNegatif&&n.doNegatif,this.qrcode.callback=i,d){const e=n.qrbox;if(e<Html5Qrcode.MIN_QR_BOX_SIZE)throw`minimum size of 'config.qrbox' is ${Html5Qrcode.MIN_QR_BOX_SIZE}px.`;if(e>l)throw"'config.qrbox' should not be greater than the width of the HTML element."}const h=(e,t)=>{const i=n.qrbox;i>t&&console.warn("[Html5Qrcode] config.qrboxsize is greater than video height. Shading will be ignored");const o=d&&i<=t,s={x:0,y:0,width:e,height:t},a=o?this._getShadedRegionBounds(e,t,i):s,l=this._createCanvasElement(a.width,a.height),h=l.getContext("2d");h.canvas.width=a.width,h.canvas.height=a.height,c.append(l),o&&this._possiblyInsertShadingElement(c,e,t,i),r._qrRegion=a,r._context=h,r._canvasElement=l},g=()=>{try{return r.qrcode.doNegatif=!1,r.qrcode.decode(),this._possiblyUpdateShaders(!0),!0}catch(e){return this._possiblyUpdateShaders(!1),o(`QR code parse error, error = ${e}`),!1}},m=()=>{try{return r.qrcode.doNegatif=!0,r.qrcode.decode(),this._possiblyUpdateShaders(!0),!0}catch(e){return this._possiblyUpdateShaders(!1),o(`QR code parse error, error = ${e}`),!1}},_=()=>{if(r._shouldScan){if(r._localMediaStream){const e=r._videoElement,t=e.videoWidth/e.clientWidth,i=e.videoHeight/e.clientHeight,o=r._qrRegion.width*t,s=r._qrRegion.height*i,a=r._qrRegion.x*t,d=r._qrRegion.y*i;r._context.drawImage(r._videoElement,a,d,o,s,0,0,r._qrRegion.width,r._qrRegion.height);const c=g();let l=!1;if(c||(l=m()),!c&&!l&&!0!==n.disableFlip){this._context.translate(this._context.canvas.width,0),this._context.scale(-1,1);g()||m()}}r._foreverScanTimeout=setTimeout(_,Html5Qrcode._getTimeoutFps(n.fps))}},f=e=>new Promise(((t,i)=>{const o=()=>{const o=this._createVideoElement(l);r._element.append(o),o.onabort=i,o.onerror=i,o.onplaying=()=>{const e=o.clientWidth,i=o.clientHeight;h(e,i),_(),t()},o.srcObject=e,o.play(),r._videoElement=o};if(r._localMediaStream=e,a||!n.aspectRatio)o();else{const t={aspectRatio:n.aspectRatio};e.getVideoTracks()[0].applyConstraints(t).then((e=>o())).catch((e=>{console.log("[Warning] [Html5Qrcode] Constriants could not be satisfied, ignoring constraints",e),o()}))}}));return new Promise(((t,i)=>{if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){const o=a?n.videoConstraints:r._createVideoConstraints(e);navigator.mediaDevices.getUserMedia({audio:!1,video:o}).then((e=>{f(e).then((e=>{r._isScanning=!0,t()})).catch(i)})).catch((e=>{i(`Error getting userMedia, error = ${e}`)}))}else if(navigator.getUserMedia){if("string"!=typeof e)throw"The device doesn't support navigator.mediaDevices, only supported cameraIdOrConfig in this case is deviceId parameter (string).";const o={video:{optional:[{sourceId:e}]}};navigator.getUserMedia(o,(e=>{f(e).then((e=>{r._isScanning=!0,t()})).catch(i)}),(e=>{i(`Error getting userMedia, error = ${e}`)}))}else i("Web camera streaming not supported by the browser.")}))}stop(){this._shouldScan=!1,clearTimeout(this._foreverScanTimeout);const e=this;return new Promise(((t,i)=>{e.qrcode.callback=null;const o=e._localMediaStream.getVideoTracks().length;var r=0;const n=()=>{e._localMediaStream=null,e._element.removeChild(e._videoElement),e._element.removeChild(e._canvasElement),(()=>{for(;e._element.getElementsByClassName(Html5Qrcode.SHADED_REGION_CLASSNAME).length;){const t=e._element.getElementsByClassName(Html5Qrcode.SHADED_REGION_CLASSNAME)[0];e._element.removeChild(t)}})(),e._isScanning=!1,e._qrRegion&&(e._qrRegion=null),e._context&&(e._context=null),t(!0)};e._localMediaStream.getVideoTracks().forEach((e=>{e.stop(),++r>=o&&n()}))}))}scanFile(e,t){const i=this;if(!(e&&e instanceof File))throw"imageFile argument is mandatory and should be instance of File. Use 'event.target.files[0]'";if(t=void 0===t||t,i._isScanning)throw"Close ongoing scan before scanning a file.";const o=(e,t,i,r)=>{if(e<=i&&t<=r){return{x:(i-e)/2,y:(r-t)/2,width:e,height:t}}{const n=e,s=t;return e>i&&(t*=i/e,e=i),t>r&&(e*=r/t,t=r),Html5Qrcode._log(`Image downsampled from ${n}X${s} to ${e}X${t}.`),o(e,t,i,r)}};return new Promise(((r,n)=>{i._possiblyCloseLastScanImageFile(),i._clearElement(),i._lastScanImageFile=e;const s=new Image;s.onload=()=>{const e=s.width,a=s.height,d=document.getElementById(i._elementId),c=d.clientWidth?d.clientWidth:Html5Qrcode.DEFAULT_WIDTH,l=Math.max(d.clientHeight?d.clientHeight:a,Html5Qrcode.FILE_SCAN_MIN_HEIGHT),h=o(e,a,c,l);if(t){const t=i._createCanvasElement(c,l,"qr-canvas-visible");t.style.display="inline-block",d.appendChild(t);const o=t.getContext("2d");o.canvas.width=c,o.canvas.height=l,o.drawImage(s,0,0,e,a,h.x,h.y,h.width,h.height)}const g=i._createCanvasElement(h.width,h.height);d.appendChild(g);const m=g.getContext("2d");m.canvas.width=h.width,m.canvas.height=h.height,m.drawImage(s,0,0,e,a,0,0,h.width,h.height);try{r(i.qrcode.decode())}catch(e){n(`QR code parse error, error = ${e}`)}},s.onerror=n,s.onabort=n,s.onstalled=n,s.onsuspend=n,s.src=URL.createObjectURL(e)}))}clear(){this._clearElement()}static getCameras(){return new Promise(((e,t)=>{if(navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices&&navigator.mediaDevices.getUserMedia)this._log("navigator.mediaDevices used"),navigator.mediaDevices.getUserMedia({audio:!1,video:!0}).then((i=>{i.oninactive=e=>this._log("All streams closed");navigator.mediaDevices.enumerateDevices().then((t=>{const o=[];for(var r=0;r<t.length;r++){const e=t[r];"videoinput"==e.kind&&o.push({id:e.deviceId,label:e.label})}this._log(`${o.length} results found`),(e=>{const t=e.getVideoTracks();for(var i=0;i<t.length;i++){const o=t[i];o.enabled=!1,o.stop(),e.removeTrack(o)}})(i),e(o)})).catch((e=>{t(`${e.name} : ${e.message}`)}))})).catch((e=>{t(`${e.name} : ${e.message}`)}));else if(MediaStreamTrack&&MediaStreamTrack.getSources){this._log("MediaStreamTrack.getSources used");const t=t=>{const i=[];for(var o=0;o!==t.length;++o){const e=t[o];"video"===e.kind&&i.push({id:e.id,label:e.label})}this._log(`${i.length} results found`),e(i)};MediaStreamTrack.getSources(t)}else this._log("unable to query supported devices."),t("unable to query supported devices.")}))}getRunningTrackCapabilities(){if(null==this._localMediaStream)throw"Scanning is not in running state, call this API only when QR code scanning using camera is in running state.";if(0===this._localMediaStream.getVideoTracks().length)throw"No video tracks found";return this._localMediaStream.getVideoTracks()[0].getCapabilities()}applyVideoConstraints(e){if(!e)throw"videoConstaints is required argument.";if(!this._isMediaStreamConstraintsValid(e))throw"invalid videoConstaints passed, check logs for more details";if(null==this._localMediaStream)throw"Scanning is not in running state, call this API only when QR code scanning using camera is in running state.";if(0===this._localMediaStream.getVideoTracks().length)throw"No video tracks found";return new Promise(((t,i)=>{if("aspectRatio"in e)return void i("Chaning 'aspectRatio' in run-time is not yet supported.");this._localMediaStream.getVideoTracks()[0].applyConstraints(e).then((e=>{t(e)})).catch((e=>{i(e)}))}))}_clearElement(){if(this._isScanning)throw"Cannot clear while scan is ongoing, close it first.";document.getElementById(this._elementId).innerHTML=""}_createCanvasElement(e,t,i){const o=e,r=t,n=document.createElement("canvas");return n.style.width=`${o}px`,n.style.height=`${r}px`,n.style.display="none",n.id=void 0===i?"qr-canvas":i,n}_createVideoElement(e){const t=document.createElement("video");return t.style.width=`${e}px`,t.muted=!0,t.playsInline=!0,t}_getShadedRegionBounds(e,t,i){if(i>e||i>t)throw"'config.qrbox' should not be greater than the width and height of the HTML element.";return{x:(e-i)/2,y:(t-i)/2,width:i,height:i}}_possiblyInsertShadingElement(e,t,i,o){if(t-o<1||i-o<1)return;const r=document.createElement("div");if(r.style.position="absolute",r.style.borderLeft=(t-o)/2+"px solid #0000007a",r.style.borderRight=(t-o)/2+"px solid #0000007a",r.style.borderTop=(i-o)/2+"px solid #0000007a",r.style.borderBottom=(i-o)/2+"px solid #0000007a",r.style.boxSizing="border-box",r.style.top="0px",r.style.bottom="0px",r.style.left="0px",r.style.right="0px",r.id=`${Html5Qrcode.SHADED_REGION_CLASSNAME}`,t-o<11||i-o<11)this.hasBorderShaders=!1;else{const e=5,t=40;this._insertShaderBorders(r,t,e,-e,0,!0),this._insertShaderBorders(r,t,e,-e,0,!1),this._insertShaderBorders(r,t,e,o+e,0,!0),this._insertShaderBorders(r,t,e,o+e,0,!1),this._insertShaderBorders(r,e,t+e,-e,-e,!0),this._insertShaderBorders(r,e,t+e,o+e-t,-e,!0),this._insertShaderBorders(r,e,t+e,-e,-e,!1),this._insertShaderBorders(r,e,t+e,o+e-t,-e,!1),this.hasBorderShaders=!0}e.append(r)}_insertShaderBorders(e,t,i,o,r,n){const s=document.createElement("div");s.style.position="absolute",s.style.backgroundColor=Html5Qrcode.BORDER_SHADER_DEFAULT_COLOR,s.style.width=`${t}px`,s.style.height=`${i}px`,s.style.top=`${o}px`,n?s.style.left=`${r}px`:s.style.right=`${r}px`,this.borderShaders||(this.borderShaders=[]),this.borderShaders.push(s),e.appendChild(s)}_possiblyUpdateShaders(e){this.qrMatch!==e&&(this.hasBorderShaders&&this.borderShaders&&this.borderShaders.length&&this.borderShaders.forEach((t=>{t.style.backgroundColor=e?Html5Qrcode.BORDER_SHADER_MATCH_COLOR:Html5Qrcode.BORDER_SHADER_DEFAULT_COLOR})),this.qrMatch=e)}_possiblyCloseLastScanImageFile(){this._lastScanImageFile&&(URL.revokeObjectURL(this._lastScanImageFile),this._lastScanImageFile=null)}_createVideoConstraints(e){if("string"==typeof e)return{deviceId:{exact:e}};if("object"!=typeof e){throw`Invalid type of 'cameraIdOrConfig' = ${typeof e}`}{const t="facingMode",i="deviceId",o={user:!0,environment:!0},r="exact",n=e=>{if(e in o)return!0;throw`config has invalid 'facingMode' value = '${e}'`},s=Object.keys(e);if(1!==s.length)throw`'cameraIdOrConfig' object should have exactly 1 key, if passed as an object, found ${s.length} keys`;const a=Object.keys(e)[0];if(a!==t&&a!==i)throw`Only '${t}' and '${i}'  are supported for 'cameraIdOrConfig'`;if(a!==t){const t=e[a];if("string"==typeof t)return{deviceId:t};if("object"==typeof t){if(r in t)return{deviceId:{exact:t[r]}};throw`'deviceId' should be string or object with ${r} as key.`}throw`Invalid type of 'deviceId' = ${typeof t}`}{const t=e[a];if("string"==typeof t){if(n(t))return{facingMode:t}}else{if("object"!=typeof t){throw`Invalid type of 'facingMode' = ${typeof t}`}if(!(r in t))throw`'facingMode' should be string or object with ${r} as key.`;if(n(t[r]))return{facingMode:{exact:t[r]}}}}}}_isMediaStreamConstraintsValid(e){if(!e)return Html5Qrcode._logError("Empty videoConstraints",!0),!1;if("object"!=typeof e){const t=typeof e;return Html5Qrcode._logError(`videoConstraints should be of type object, the object passed is of type ${t}.`,!0),!1}const t=new Set(["autoGainControl","channelCount","echoCancellation","latency","noiseSuppression","sampleRate","sampleSize","volume"]),i=Object.keys(e);for(let e=0;e<i.length;e++){const o=i[e];if(t.has(o))return Html5Qrcode._logError(`${o} is not supported videoConstaints.`,!0),!1}return!0}static _getTimeoutFps(e){return 1e3/e}static _log(e){Html5Qrcode.VERBOSE&&console.log(e)}static _logError(e,t){(Html5Qrcode.VERBOSE||!0===t)&&console.error(e)}}